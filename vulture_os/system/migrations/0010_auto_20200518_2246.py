# Generated by Django 2.1.3 on 2020-05-18 22:46

from django.db import migrations, models
import django.db.models.deletion


def forwards_func(apps, schema_editor):
    tenants_model = apps.get_model("system", "Tenants")
    config_model = apps.get_model("system", "Config")
    frontend_model = apps.get_model("services", "Frontend")
    db_alias = schema_editor.connection.alias
    config_objects = config_model.objects.using(db_alias)
    tenants_objects = tenants_model.objects.using(db_alias)
    # Create default Tenants config if it does not exists
    try:
        default_tenants = tenants_objects.get(pk=1)
    except:
        # Keep all default values
        default_tenants = tenants_model()
        default_tenants.save()

    # If Config object exists
    try:
        config = config_objects.get()
        # Import global config to Tenants
        default_tenants.name = config.customer_name
        default_tenants.predator_apikey = config.predator_apikey
        default_tenants.shodan_apikey = config.shodan_apikey
        default_tenants.chameleon_apikey = config.chameleon_apikey
        default_tenants.save()
    except:
        # If config does not exists, do nothing
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('system', '0009_node_pstats_forwarders'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tenants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='ACME Corporation', unique=True)),
                ('predator_apikey', models.TextField(blank=True, default='fdsqJr_45;..')),
                ('shodan_apikey', models.TextField(blank=True, default='')),
                ('chameleon_apikey', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.RunPython(forwards_func, migrations.RunPython.noop),
        migrations.AddField(
            model_name='config',
            name='internal_tenants',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='system.Tenants'),
        ),
        migrations.RemoveField(
            model_name='config',
            name='chameleon_apikey',
        ),
        migrations.RemoveField(
            model_name='config',
            name='customer_name',
        ),
        migrations.RemoveField(
            model_name='config',
            name='predator_apikey',
        ),
        migrations.RemoveField(
            model_name='config',
            name='shodan_apikey',
        ),
    ]

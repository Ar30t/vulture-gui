# Generated by Django 2.1.3 on 2019-06-25 15:17

from django.db import migrations, models
import django.db.models.deletion


def forwards_func(apps, schema_editor):
    node_model = apps.get_model("system", "Node")
    networkcard_model = apps.get_model("system", "NetworkInterfaceCard")
    frontend_model = apps.get_model("services", "Frontend")
    db_alias = schema_editor.connection.alias
    node_objects = node_model.objects.using(db_alias)
    networkinterfacecard_objects = networkcard_model.objects.using(db_alias)
    frontend_objects = frontend_model.objects.using(db_alias)

    for frontend in frontend_objects.filter(impcap_intf__dev="vm-public"):
        if frontend.mode == "impcap":
            new_intf = networkinterfacecard_objects.exclude(dev="vm-public").filter(node=frontend.impcap_intf.node.id).first()
            frontend.impcap_intf = new_intf
            print("Frontend '{}' was using vm-public, set-it to use interface {}".format(str(frontend), str(new_intf)))
        else:
            frontend.impcap_intf = None
        frontend.save()

    for node in node_objects.all():
        if not node.internet_ip:
            node.internet_ip = node.management_ip
            node.save()
        print("Node {} successfully updated.".format(node.name))

        for network_card in networkinterfacecard_objects.filter(dev="vm-public", node=node.id):
            network_card.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('system', '0004_vm'),
        ('services', '0006_auto_20190625_1517'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='config',
            name='is_scanner',
        ),
        migrations.AddField(
            model_name='node',
            name='internet_ip',
            field=models.GenericIPAddressField(default='', help_text='IP used by jails to contact internet'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='node',
            name='scanner_ip',
            field=models.ForeignKey(help_text='NAT IP used for scanner', null=True, on_delete=django.db.models.deletion.SET_NULL, to='system.NetworkAddress', verbose_name='Scanner IP'),
        ),
        migrations.RunPython(forwards_func, migrations.RunPython.noop)
    ]


template(name="tpl_pf_mongo" type="list") {
#        property(name="$timestamp")
        property(name="$!time")
        property(name="$!timestamp_app")
        property(name="$!action")
        property(name="$!ttl")
        property(name="$!direction")
        property(name="$!if")
        property(name="$!proto")
        property(name="$!len")
        property(name="$!rulenb")
        property(name="$!src_ip")
        property(name="$!dst_ip")
        property(name="$!src_tcp_port")
        property(name="$!dst_tcp_port")
        property(name="$!src_udp_port")
        property(name="$!dst_udp_port")
        property(name="$!iplocation!reputation")
}

template(name="garbage_pf" type="string" string="/var/log/garbage/garbage_%SYSLOGTAG%-%timestamp:::date-year%.%timestamp:::date-month%.%timestamp:::date-day%-%timestamp:::date-hour%.log")

input(type="imfile" file="/var/log/pf/pf.log" ruleset="PF" Tag="PF")

Ruleset(name="PF") {
    action(type="mmnormalize" rulebase="/usr/local/etc/rsyslog.d/pf.rb")

    if $parsesuccess == "OK" then {

      if $!action == 1 then {
        set $!action = "block";
      } else if $!action == 0 then {
        set $!action = "pass";
      } else if $!action == 8 then {
        set $!action = "rdr";
      }

      if $!direction == 1 then {
        set $!direction = "in";
      } else if $!action == 0 then {
        set $!direction = "out";
      }

      if $!proto == 6 then {
        set $!proto = "TCP";
      } else if $!proto == 17 then {
        set $!proto = "UDP";
      }

      # Mandatory to get "time" as ISODate in MongoDB
      set $!time = format_time($!timestamp_app, "date-rfc3339");

      action(type="ommongodb"
             template="tpl_pf_mongo"
             uristr="{{mongodb_uri}}/replicaset=Vulture&ssl=True"
             ssl_ca="/var/db/pki/ca.pem"
             ssl_cert="/var/db/pki/node.pem"
             db="logs"
             collection="pf")

      action(type="omfile"
             Dynafile="garbage_pf"
             action.ExecOnlyWhenPreviousIsSuspended="on"
             CreateDirs="on"
             template="raw_message")
    } else {
        action(type="omfile" Dynafile="garbage_pf" CreateDirs="on" template="raw_message")
    }
    stop
}

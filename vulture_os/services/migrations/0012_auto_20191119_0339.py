# Generated by Django 2.1.3 on 2019-11-19 03:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('services', '0011_remove_frontend_enable_logging_body'),
    ]

    operations = [
        migrations.CreateModel(
            name='LogRotateSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AlterField(
            model_name='frontend',
            name='logging_geoip_database',
            field=models.ForeignKey(default=None, help_text='MMDB database used by rsyslog to get Geoip location of an IPv4', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='frontend_geoip', to='applications.ReputationContext'),
        ),
        migrations.AlterField(
            model_name='frontend',
            name='logging_reputation_database_v4',
            field=models.ForeignKey(default=None, help_text='MMDB database used by rsyslog to get reputation tags for IPv4', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='frontend_reputation_v4', to='applications.ReputationContext'),
        ),
        migrations.AlterField(
            model_name='frontend',
            name='logging_reputation_database_v6',
            field=models.ForeignKey(default=None, help_text='MMDB database used by rsyslog to get reputation tags for IPv6', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='frontend_reputation_v6', to='applications.ReputationContext'),
        ),
        migrations.AlterField(
            model_name='listener',
            name='max_rate',
            field=models.PositiveIntegerField(default=1000, help_text='Max number of new connexions per source per second.', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='listener',
            name='max_src',
            field=models.PositiveIntegerField(default=100, help_text='Max number of connexions per source.', validators=[django.core.validators.MinValueValidator(0)]),
        ),
    ]
